---
import { Icon } from 'astro-icon/components'
import type { CollectionEntry } from 'astro:content'
import dayjs from 'dayjs'
import Tag from './Tag.astro'

interface Props {
  posts: CollectionEntry<'blog'>[]
}
const { posts } = Astro.props

const sortedPosts = posts.sort((a, b) => {
  return (a.data.createdAt ?? 0) > (b.data.createdAt ?? 0) ? -1 : 1
})

const dateFormatTemplate = 'YYYY.MM.DD'
---

<ul transition:animate="fade" data-pagefind-ignore>
  {
    sortedPosts.map((post) => (
      <li>
        <p>
          {dayjs(post.data.createdAt).format(dateFormatTemplate)}
          {post.data.updatedAt && (
            <span>
              <Icon name="mdi:update" />
              {dayjs(post.data.updatedAt).format(dateFormatTemplate)}
            </span>
          )}
        </p>
        <a href={`/posts/${post.id}`} transition:name={post.id}>
          {post.data.title}
        </a>
        <div>
          {post.data.tags?.map((tag) => (
            <Tag tag={tag} />
          ))}
        </div>
      </li>
    ))
  }
</ul>

<style>
  ul {
    display: grid;
    gap: 1rem;
  }

  li {
    display: grid;
    gap: 1rem;

    padding: 1rem;
    border-radius: 0.5rem;

    background-color: var(--surface-container-low);
  }

  li > p {
    display: flex;
    gap: 2rem;
  }

  li > p > span {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    font-size: 0.8rem;
  }

  li > div {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
</style>
