---
import type { Code } from 'mdast'
import { ExpressiveCode } from 'expressive-code'
import { toHtml } from 'expressive-code/hast'
import { fade } from 'astro:transitions'

interface Props {
  node: Code
}
const { node } = Astro.props

const [language = '', filename] = node.lang?.split(':') ?? []
const content = node.value

const ec = new ExpressiveCode()

const baseStyles = await ec.getBaseStyles()
const themeStyles = await ec.getThemeStyles()
const jsModules = await ec.getJsModules()

const { renderedGroupAst, styles: blockStyles } = await ec.render({
  code: content,
  language,
  props: {
    title: filename,
  },
})

const styleString = [baseStyles, themeStyles, ...blockStyles].join('')

const html = toHtml(renderedGroupAst)
---

<Fragment set:html={html} />

<style is:inline set:html={styleString}></style>
<script set:html={jsModules.join('')} />
